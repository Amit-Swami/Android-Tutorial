<?xml version="1.0" encoding="utf-8"?>
<ScrollView android:layout_height="match_parent"
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent">
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Tab1Grid12List5"
    android:orientation="vertical">
    <android.support.v7.widget.Toolbar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/Base.ThemeOverlay.AppCompat.Dark"
        app:popupTheme="@style/Base.ThemeOverlay.AppCompat.Light"
        android:background="@color/colorPrimary">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Android Tutorial"
            android:textSize="20dp"
            android:textColor="#ffffff"
            android:textStyle="bold"/>

    </android.support.v7.widget.Toolbar>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Intent Service:"
        android:textSize="17dp"
        android:textColor="#a4c"
        android:textStyle="bold"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="IntentService is a base class for Services that handle asynchronous requests (expressed as Intents) on demand. Clients send requests through Context.startService(Intent) calls; the service is started as needed, handles each Intent in turn using a worker thread, and stops itself when it runs out of work."
        android:textColor="#000"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:layout_marginTop="10dp"
        android:textColor="#000"
        android:text="This 'work queue processor' pattern is commonly used to offload tasks from an application's main thread. The IntentService class exists to simplify this pattern and take care of the mechanics. To use it, extend IntentService and implement onHandleIntent(Intent). IntentService will receive the Intents, launch a worker thread, and stop the service as appropriate."/>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="All requests are handled on a single worker thread -- they may take as long as necessary (and will not block the application's main loop), but only one request will be processed at a time."
        android:textColor="#000"
        android:textSize="16sp"/>
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#000"
        android:layout_marginTop="15dp">

    </View>
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#000"
        android:layout_marginTop="10dp">

    </View>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="17dp"
        android:textColor="#a4c"
        android:text="Public methods"
        android:textStyle="bold"
        android:layout_marginTop="15dp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold|italic"
        android:layout_marginTop="10dp"
        android:text="onBind:"
        android:textColor="#000"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="public IBinder onBind (Intent intent)
Unless you provide binding for your service, you don't need to implement this method, because the default implementation returns null."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold|italic"
        android:layout_marginTop="10dp"
        android:text="onCreate:"
        android:textColor="#000"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="public void onCreate ()
Called by the system when the service is first created. Do not call this method directly."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold|italic"
        android:layout_marginTop="10dp"
        android:text="onDestroy:"
        android:textColor="#000"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="public void onDestroy ()
Called by the system to notify a Service that it is no longer used and is being removed. The service should clean up any resources it holds (threads, registered receivers, etc) at this point. Upon return, there will be no more calls in to this Service object and it is effectively dead. Do not call this method directly."/>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold|italic"
        android:layout_marginTop="10dp"
        android:text="onStartCommand:"
        android:textColor="#000"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="public int onStartCommand (Intent intent,
                int flags,
                int startId)
You should not override this method for your IntentService. Instead, override onHandleIntent(Intent), which the system calls when the IntentService receives a start request."/>
</LinearLayout>
</ScrollView>