<?xml version="1.0" encoding="utf-8"?>
<ScrollView android:layout_height="match_parent"
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent">
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Tab1Grid5List4"
    android:orientation="vertical">
    <androidx.appcompat.widget.Toolbar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/Base.ThemeOverlay.AppCompat.Dark"
        app:popupTheme="@style/Base.ThemeOverlay.AppCompat.Light"
        android:background="@color/colorPrimary">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Android Tutorial"
            android:textSize="20dp"
            android:textColor="#ffffff"
            android:textStyle="bold"/>

    </androidx.appcompat.widget.Toolbar>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textStyle="bold"
        android:textColor="#a4c"
        android:textSize="17dp"
        android:text="Fragment:"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="A Fragment is a piece of an activity which enable more modular activity design. It will not be wrong if we say, a fragment is a kind of sub-activity.
Following are important points about fragment âˆ’

* A fragment has its own layout and its own behaviour with its own life cycle callbacks.

* You can add or remove fragments in an activity while the activity is running.

* You can combine multiple fragments in a single activity to build a multi-pane UI.

* A fragment can be used in multiple activities.

* Fragment life cycle is closely related to the life cycle of its host activity which means when the activity is paused, all the fragments available in the activity will also be stopped.

* A fragment can implement a behaviour that has no user interface component.

* Fragments were added to the Android API in Honeycomb version of Android which API version 11."/>

    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/gg42"
        android:layout_marginTop="-50dp"/>
    <View
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#000"
        android:layout_marginTop="-30dp">

    </View>
    <View
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#000"
        android:layout_marginTop="10dp">

    </View>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Fragment LifeCycle"
        android:textColor="#a4c"
        android:textSize="17dp"
        android:textStyle="bold"
        android:layout_marginTop="15dp"/>

    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/gg43"
        android:layout_marginTop="-50dp"/>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:textColor="#000"
        android:layout_marginTop="-40dp"
        android:text="onAttach():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="16sp"
        android:text="The fragment instance is associated with an activity instance.The fragment and the activity is not fully initialized. Typically you get in this method a reference to the activity which uses the fragment for further initialization work."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onCreate():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="The system calls this method when creating the fragment. You should initialize essential components of the fragment that you want to retain when the fragment is paused or stopped, then resumed."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onActivityCreated():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="The onActivityCreated() is called after the onCreateView() method when the host activity is created. Activity and fragment instance have been created as well as the view hierarchy of the activity. At this point, view can be accessed with the findViewById() method. example. In this method you can instantiate objects which require a Context object"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onStart():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="The onStart() method is called once the fragment gets visible."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onResume()"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="Fragment becomes active."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onPause():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="The system calls this method as the first indication that the user is leaving the fragment. This is usually where you should commit any changes that should be persisted beyond the current user session."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onStop():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="Fragment going to be stopped by calling onStop()"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onDestroyView():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="Fragment view will destroy after call this method"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="17dp"
        android:textStyle="italic|bold"
        android:layout_marginTop="10dp"
        android:text="onDestroy():"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="onDestroy() called to do final clean up of the fragment's state but Not guaranteed to be called by the Android platform."/>
</LinearLayout>
</ScrollView>