<?xml version="1.0" encoding="utf-8"?>
<ScrollView android:layout_height="match_parent"
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent">
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Tab1Grid7List4"
    android:orientation="vertical">
    <androidx.appcompat.widget.Toolbar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/Base.ThemeOverlay.AppCompat.Dark"
        app:popupTheme="@style/Base.ThemeOverlay.AppCompat.Light"
        android:background="@color/colorPrimary">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Android Tutorial"
            android:textSize="20dp"
            android:textColor="#ffffff"
            android:textStyle="bold"/>

    </androidx.appcompat.widget.Toolbar>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Popup menu:"
        android:textColor="#a4c"
        android:textStyle="bold"
        android:textSize="17dp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:text="A PopupMenu is a vertical list of items anchored to a View. It appears below the anchor view if there is room, or above the view otherwise.

A popup menu is typically used to provide an overflow of actions (similar to the overflow action icon for the options menu) or the second part of a two-part command. Use a popup menu for extended actions that relate to regions of content in your activity. Unlike a context menu, a popup menu is anchored to a Button (View), is always available, and it's actions generally do not affect the content of the View.

For example, the Gmail app uses a popup menu anchored to the overflow icon in the app bar when showing an email message. The popup menu items Reply, Reply All, and Forward are related to the email message, but don't affect or act on the message. Actions in a popup menu should not directly affect the corresponding content (use a contextual menu to directly affect selected content). As shown below, a popup can be anchored to the overflow action button in the action bar."/>

    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/gg46"/>
    <View
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#000"
        android:layout_marginTop="15dp">

    </View>
    <View
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#000"
        android:layout_marginTop="10dp">

    </View>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="15dp"
        android:textSize="17dp"
        android:textStyle="bold"
        android:textColor="#a4c"
        android:text="Creating a popup menu:"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="#000"
        android:textSize="16sp"
        android:text="Follow these steps to create a popup menu (refer to figure below):"/>
    <ImageView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/gg47"
        android:layout_marginTop="-20dp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="#000"
        android:layout_marginTop="-20dp"
        android:text="1. Create an XML menu resource file for the popup menu items, and assign appearance and position attributes (as described in a previous section)."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="2. Add an ImageButton for the popup menu icon in the XML activity layout file."
        android:textColor="#000"
        android:layout_marginTop="10dp"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="3 Assign onClickListener() to the button."
        android:textColor="#000"
        android:layout_marginTop="10dp"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="4. Override the onClick() method to inflate the popup menu and register it with PopupMenu.OnMenuItemClickListener."
        android:textColor="#000"
        android:layout_marginTop="10dp"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="5. Implement the onMenuItemClick() method."
        android:textColor="#000"
        android:textSize="16sp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="6. Create a method to perform an action for each popup menu item."
        android:textColor="#000"
        android:textSize="16sp"/>


</LinearLayout>
</ScrollView>